@startuml

class CalculateNetPayableAmountRequest {
    - User user
    - List<Bill> bills
}

class User {
    - int userId
    - UserType userType
    - LocalDate registrationDate
}

enum UserType {
    EMPLOYEE
    AFFILIATE
    CUSTOMER
}

class Bill {
    - int billId
    - double totalAmount
    - boolean isGrocery
}

interface RetailStoreDiscountInterface {
    + calculateNetPayableAmount(User, List<Bill>): double
}

class RetailStoreDiscountsService {
    - double discountFor100
    + calculateNetPayableAmount(User, List<Bill>): double
    - getPayableAmount(User, Bill): double
    - calculateDiscount(User, Bill): double
    - isCustomerOverTwoYears(User): boolean
    - calculateTotalDiscount(double, double): double
}

CalculateNetPayableAmountRequest --> User
CalculateNetPayableAmountRequest --> Bill
RetailStoreDiscountsService --> RetailStoreDiscountInterface
RetailStoreDiscountsService --> User
RetailStoreDiscountsService --> Bill

@enduml
